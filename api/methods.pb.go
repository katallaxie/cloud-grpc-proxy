// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: methods.proto

package api

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Methods are extensions ...
type Methods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector string `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	// Types that are assignable to Pattern:
	//	*Methods_Lambda_
	//	*Methods_Dynamodb
	//	*Methods_Sqs
	//	*Methods_Msk
	//	*Methods_Kinesis_
	Pattern isMethods_Pattern `protobuf_oneof:"pattern"`
}

func (x *Methods) Reset() {
	*x = Methods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods) ProtoMessage() {}

func (x *Methods) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods.ProtoReflect.Descriptor instead.
func (*Methods) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0}
}

func (x *Methods) GetSelector() string {
	if x != nil {
		return x.Selector
	}
	return ""
}

func (m *Methods) GetPattern() isMethods_Pattern {
	if m != nil {
		return m.Pattern
	}
	return nil
}

func (x *Methods) GetLambda() *Methods_Lambda {
	if x, ok := x.GetPattern().(*Methods_Lambda_); ok {
		return x.Lambda
	}
	return nil
}

func (x *Methods) GetDynamodb() *Methods_DynamoDB {
	if x, ok := x.GetPattern().(*Methods_Dynamodb); ok {
		return x.Dynamodb
	}
	return nil
}

func (x *Methods) GetSqs() *Methods_SQS {
	if x, ok := x.GetPattern().(*Methods_Sqs); ok {
		return x.Sqs
	}
	return nil
}

func (x *Methods) GetMsk() *Methods_MSK {
	if x, ok := x.GetPattern().(*Methods_Msk); ok {
		return x.Msk
	}
	return nil
}

func (x *Methods) GetKinesis() *Methods_Kinesis {
	if x, ok := x.GetPattern().(*Methods_Kinesis_); ok {
		return x.Kinesis
	}
	return nil
}

type isMethods_Pattern interface {
	isMethods_Pattern()
}

type Methods_Lambda_ struct {
	Lambda *Methods_Lambda `protobuf:"bytes,2,opt,name=lambda,proto3,oneof"`
}

type Methods_Dynamodb struct {
	Dynamodb *Methods_DynamoDB `protobuf:"bytes,3,opt,name=dynamodb,proto3,oneof"`
}

type Methods_Sqs struct {
	Sqs *Methods_SQS `protobuf:"bytes,4,opt,name=sqs,proto3,oneof"`
}

type Methods_Msk struct {
	Msk *Methods_MSK `protobuf:"bytes,5,opt,name=msk,proto3,oneof"`
}

type Methods_Kinesis_ struct {
	Kinesis *Methods_Kinesis `protobuf:"bytes,6,opt,name=kinesis,proto3,oneof"`
}

func (*Methods_Lambda_) isMethods_Pattern() {}

func (*Methods_Dynamodb) isMethods_Pattern() {}

func (*Methods_Sqs) isMethods_Pattern() {}

func (*Methods_Msk) isMethods_Pattern() {}

func (*Methods_Kinesis_) isMethods_Pattern() {}

type Methods_Lambda struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionName string `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	Qualifier    string `protobuf:"bytes,2,opt,name=qualifier,proto3" json:"qualifier,omitempty"`
}

func (x *Methods_Lambda) Reset() {
	*x = Methods_Lambda{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_Lambda) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_Lambda) ProtoMessage() {}

func (x *Methods_Lambda) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_Lambda.ProtoReflect.Descriptor instead.
func (*Methods_Lambda) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Methods_Lambda) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *Methods_Lambda) GetQualifier() string {
	if x != nil {
		return x.Qualifier
	}
	return ""
}

type Methods_DynamoDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Input:
	//	*Methods_DynamoDB_GetItem
	//	*Methods_DynamoDB_PutItem
	//	*Methods_DynamoDB_UpdateItem
	//	*Methods_DynamoDB_DeleteItem
	//	*Methods_DynamoDB_Query
	//	*Methods_DynamoDB_Scan
	Input isMethods_DynamoDB_Input `protobuf_oneof:"input"`
}

func (x *Methods_DynamoDB) Reset() {
	*x = Methods_DynamoDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_DynamoDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_DynamoDB) ProtoMessage() {}

func (x *Methods_DynamoDB) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_DynamoDB.ProtoReflect.Descriptor instead.
func (*Methods_DynamoDB) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 1}
}

func (m *Methods_DynamoDB) GetInput() isMethods_DynamoDB_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *Methods_DynamoDB) GetGetItem() *Methods_DynamoDB_GetItemInput {
	if x, ok := x.GetInput().(*Methods_DynamoDB_GetItem); ok {
		return x.GetItem
	}
	return nil
}

func (x *Methods_DynamoDB) GetPutItem() *Methods_DynamoDB_PutItemInput {
	if x, ok := x.GetInput().(*Methods_DynamoDB_PutItem); ok {
		return x.PutItem
	}
	return nil
}

func (x *Methods_DynamoDB) GetUpdateItem() *Methods_DynamoDB_UpdateItemInput {
	if x, ok := x.GetInput().(*Methods_DynamoDB_UpdateItem); ok {
		return x.UpdateItem
	}
	return nil
}

func (x *Methods_DynamoDB) GetDeleteItem() *Methods_DynamoDB_DeleteItemInput {
	if x, ok := x.GetInput().(*Methods_DynamoDB_DeleteItem); ok {
		return x.DeleteItem
	}
	return nil
}

func (x *Methods_DynamoDB) GetQuery() *Methods_DynamoDB_QueryInput {
	if x, ok := x.GetInput().(*Methods_DynamoDB_Query); ok {
		return x.Query
	}
	return nil
}

func (x *Methods_DynamoDB) GetScan() *Methods_DynamoDB_ScanInput {
	if x, ok := x.GetInput().(*Methods_DynamoDB_Scan); ok {
		return x.Scan
	}
	return nil
}

type isMethods_DynamoDB_Input interface {
	isMethods_DynamoDB_Input()
}

type Methods_DynamoDB_GetItem struct {
	GetItem *Methods_DynamoDB_GetItemInput `protobuf:"bytes,10,opt,name=GetItem,proto3,oneof"`
}

type Methods_DynamoDB_PutItem struct {
	PutItem *Methods_DynamoDB_PutItemInput `protobuf:"bytes,11,opt,name=PutItem,proto3,oneof"`
}

type Methods_DynamoDB_UpdateItem struct {
	UpdateItem *Methods_DynamoDB_UpdateItemInput `protobuf:"bytes,12,opt,name=UpdateItem,proto3,oneof"`
}

type Methods_DynamoDB_DeleteItem struct {
	DeleteItem *Methods_DynamoDB_DeleteItemInput `protobuf:"bytes,13,opt,name=DeleteItem,proto3,oneof"`
}

type Methods_DynamoDB_Query struct {
	Query *Methods_DynamoDB_QueryInput `protobuf:"bytes,14,opt,name=Query,proto3,oneof"`
}

type Methods_DynamoDB_Scan struct {
	Scan *Methods_DynamoDB_ScanInput `protobuf:"bytes,15,opt,name=Scan,proto3,oneof"`
}

func (*Methods_DynamoDB_GetItem) isMethods_DynamoDB_Input() {}

func (*Methods_DynamoDB_PutItem) isMethods_DynamoDB_Input() {}

func (*Methods_DynamoDB_UpdateItem) isMethods_DynamoDB_Input() {}

func (*Methods_DynamoDB_DeleteItem) isMethods_DynamoDB_Input() {}

func (*Methods_DynamoDB_Query) isMethods_DynamoDB_Input() {}

func (*Methods_DynamoDB_Scan) isMethods_DynamoDB_Input() {}

type Methods_SQS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Methods_SQS) Reset() {
	*x = Methods_SQS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_SQS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_SQS) ProtoMessage() {}

func (x *Methods_SQS) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_SQS.ProtoReflect.Descriptor instead.
func (*Methods_SQS) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 2}
}

type Methods_MSK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BootstrapServer []string `protobuf:"bytes,1,rep,name=bootstrap_server,json=bootstrapServer,proto3" json:"bootstrap_server,omitempty"`
}

func (x *Methods_MSK) Reset() {
	*x = Methods_MSK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_MSK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_MSK) ProtoMessage() {}

func (x *Methods_MSK) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_MSK.ProtoReflect.Descriptor instead.
func (*Methods_MSK) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Methods_MSK) GetBootstrapServer() []string {
	if x != nil {
		return x.BootstrapServer
	}
	return nil
}

type Methods_Kinesis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamArn string `protobuf:"bytes,1,opt,name=stream_arn,json=streamArn,proto3" json:"stream_arn,omitempty"`
}

func (x *Methods_Kinesis) Reset() {
	*x = Methods_Kinesis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_Kinesis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_Kinesis) ProtoMessage() {}

func (x *Methods_Kinesis) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_Kinesis.ProtoReflect.Descriptor instead.
func (*Methods_Kinesis) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Methods_Kinesis) GetStreamArn() string {
	if x != nil {
		return x.StreamArn
	}
	return ""
}

type Methods_DynamoDB_AttributValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B    []byte                                     `protobuf:"bytes,1,opt,name=B,proto3" json:"B,omitempty"`
	BOOL bool                                       `protobuf:"varint,2,opt,name=BOOL,proto3" json:"BOOL,omitempty"`
	BS   [][]byte                                   `protobuf:"bytes,3,rep,name=BS,proto3" json:"BS,omitempty"`
	L    []*Methods_DynamoDB_AttributValue          `protobuf:"bytes,4,rep,name=L,proto3" json:"L,omitempty"`
	M    map[string]*Methods_DynamoDB_AttributValue `protobuf:"bytes,5,rep,name=M,proto3" json:"M,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	N    string                                     `protobuf:"bytes,6,opt,name=N,proto3" json:"N,omitempty"`
	NS   []string                                   `protobuf:"bytes,7,rep,name=NS,proto3" json:"NS,omitempty"`
	NULL bool                                       `protobuf:"varint,8,opt,name=NULL,proto3" json:"NULL,omitempty"`
	S    string                                     `protobuf:"bytes,9,opt,name=S,proto3" json:"S,omitempty"`
	SS   []string                                   `protobuf:"bytes,10,rep,name=SS,proto3" json:"SS,omitempty"`
}

func (x *Methods_DynamoDB_AttributValue) Reset() {
	*x = Methods_DynamoDB_AttributValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_DynamoDB_AttributValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_DynamoDB_AttributValue) ProtoMessage() {}

func (x *Methods_DynamoDB_AttributValue) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_DynamoDB_AttributValue.ProtoReflect.Descriptor instead.
func (*Methods_DynamoDB_AttributValue) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Methods_DynamoDB_AttributValue) GetB() []byte {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *Methods_DynamoDB_AttributValue) GetBOOL() bool {
	if x != nil {
		return x.BOOL
	}
	return false
}

func (x *Methods_DynamoDB_AttributValue) GetBS() [][]byte {
	if x != nil {
		return x.BS
	}
	return nil
}

func (x *Methods_DynamoDB_AttributValue) GetL() []*Methods_DynamoDB_AttributValue {
	if x != nil {
		return x.L
	}
	return nil
}

func (x *Methods_DynamoDB_AttributValue) GetM() map[string]*Methods_DynamoDB_AttributValue {
	if x != nil {
		return x.M
	}
	return nil
}

func (x *Methods_DynamoDB_AttributValue) GetN() string {
	if x != nil {
		return x.N
	}
	return ""
}

func (x *Methods_DynamoDB_AttributValue) GetNS() []string {
	if x != nil {
		return x.NS
	}
	return nil
}

func (x *Methods_DynamoDB_AttributValue) GetNULL() bool {
	if x != nil {
		return x.NULL
	}
	return false
}

func (x *Methods_DynamoDB_AttributValue) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *Methods_DynamoDB_AttributValue) GetSS() []string {
	if x != nil {
		return x.SS
	}
	return nil
}

type Methods_DynamoDB_GetItemInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributesToGet          []string          `protobuf:"bytes,1,rep,name=AttributesToGet,proto3" json:"AttributesToGet,omitempty"`
	ConsistentRead           bool              `protobuf:"varint,2,opt,name=ConsistentRead,proto3" json:"ConsistentRead,omitempty"`
	ExpressionAttributeNames map[string]string `protobuf:"bytes,3,rep,name=ExpressionAttributeNames,proto3" json:"ExpressionAttributeNames,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ProjectionExpression     string            `protobuf:"bytes,4,opt,name=ProjectionExpression,proto3" json:"ProjectionExpression,omitempty"`
	ReturnConsumedCapacity   string            `protobuf:"bytes,5,opt,name=ReturnConsumedCapacity,proto3" json:"ReturnConsumedCapacity,omitempty"`
	TableName                string            `protobuf:"bytes,6,opt,name=TableName,proto3" json:"TableName,omitempty"`
}

func (x *Methods_DynamoDB_GetItemInput) Reset() {
	*x = Methods_DynamoDB_GetItemInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_DynamoDB_GetItemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_DynamoDB_GetItemInput) ProtoMessage() {}

func (x *Methods_DynamoDB_GetItemInput) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_DynamoDB_GetItemInput.ProtoReflect.Descriptor instead.
func (*Methods_DynamoDB_GetItemInput) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Methods_DynamoDB_GetItemInput) GetAttributesToGet() []string {
	if x != nil {
		return x.AttributesToGet
	}
	return nil
}

func (x *Methods_DynamoDB_GetItemInput) GetConsistentRead() bool {
	if x != nil {
		return x.ConsistentRead
	}
	return false
}

func (x *Methods_DynamoDB_GetItemInput) GetExpressionAttributeNames() map[string]string {
	if x != nil {
		return x.ExpressionAttributeNames
	}
	return nil
}

func (x *Methods_DynamoDB_GetItemInput) GetProjectionExpression() string {
	if x != nil {
		return x.ProjectionExpression
	}
	return ""
}

func (x *Methods_DynamoDB_GetItemInput) GetReturnConsumedCapacity() string {
	if x != nil {
		return x.ReturnConsumedCapacity
	}
	return ""
}

func (x *Methods_DynamoDB_GetItemInput) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type Methods_DynamoDB_PutItemInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName                   string            `protobuf:"bytes,1,opt,name=TableName,proto3" json:"TableName,omitempty"`
	ReturnValues                string            `protobuf:"bytes,2,opt,name=ReturnValues,proto3" json:"ReturnValues,omitempty"`
	ReturnItemCollectionMetrics string            `protobuf:"bytes,3,opt,name=ReturnItemCollectionMetrics,proto3" json:"ReturnItemCollectionMetrics,omitempty"`
	ReturnConsumedCapacity      string            `protobuf:"bytes,4,opt,name=ReturnConsumedCapacity,proto3" json:"ReturnConsumedCapacity,omitempty"`
	ConditionExpression         string            `protobuf:"bytes,5,opt,name=ConditionExpression,proto3" json:"ConditionExpression,omitempty"`
	ConditionalOperator         string            `protobuf:"bytes,6,opt,name=ConditionalOperator,proto3" json:"ConditionalOperator,omitempty"`
	ExpressionAttributeNames    map[string]string `protobuf:"bytes,7,rep,name=ExpressionAttributeNames,proto3" json:"ExpressionAttributeNames,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Methods_DynamoDB_PutItemInput) Reset() {
	*x = Methods_DynamoDB_PutItemInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_DynamoDB_PutItemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_DynamoDB_PutItemInput) ProtoMessage() {}

func (x *Methods_DynamoDB_PutItemInput) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_DynamoDB_PutItemInput.ProtoReflect.Descriptor instead.
func (*Methods_DynamoDB_PutItemInput) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 1, 2}
}

func (x *Methods_DynamoDB_PutItemInput) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Methods_DynamoDB_PutItemInput) GetReturnValues() string {
	if x != nil {
		return x.ReturnValues
	}
	return ""
}

func (x *Methods_DynamoDB_PutItemInput) GetReturnItemCollectionMetrics() string {
	if x != nil {
		return x.ReturnItemCollectionMetrics
	}
	return ""
}

func (x *Methods_DynamoDB_PutItemInput) GetReturnConsumedCapacity() string {
	if x != nil {
		return x.ReturnConsumedCapacity
	}
	return ""
}

func (x *Methods_DynamoDB_PutItemInput) GetConditionExpression() string {
	if x != nil {
		return x.ConditionExpression
	}
	return ""
}

func (x *Methods_DynamoDB_PutItemInput) GetConditionalOperator() string {
	if x != nil {
		return x.ConditionalOperator
	}
	return ""
}

func (x *Methods_DynamoDB_PutItemInput) GetExpressionAttributeNames() map[string]string {
	if x != nil {
		return x.ExpressionAttributeNames
	}
	return nil
}

type Methods_DynamoDB_UpdateItemInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName                   string            `protobuf:"bytes,1,opt,name=TableName,proto3" json:"TableName,omitempty"`
	ReturnValues                string            `protobuf:"bytes,2,opt,name=ReturnValues,proto3" json:"ReturnValues,omitempty"`
	ReturnItemCollectionMetrics string            `protobuf:"bytes,3,opt,name=ReturnItemCollectionMetrics,proto3" json:"ReturnItemCollectionMetrics,omitempty"`
	ConditionExpression         string            `protobuf:"bytes,4,opt,name=ConditionExpression,proto3" json:"ConditionExpression,omitempty"`
	ConditionalOperator         string            `protobuf:"bytes,5,opt,name=ConditionalOperator,proto3" json:"ConditionalOperator,omitempty"`
	ReturnConsumedCapacity      string            `protobuf:"bytes,6,opt,name=ReturnConsumedCapacity,proto3" json:"ReturnConsumedCapacity,omitempty"`
	ExpressionAttributeNames    map[string]string `protobuf:"bytes,7,rep,name=ExpressionAttributeNames,proto3" json:"ExpressionAttributeNames,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UpdateExpression            string            `protobuf:"bytes,9,opt,name=UpdateExpression,proto3" json:"UpdateExpression,omitempty"`
}

func (x *Methods_DynamoDB_UpdateItemInput) Reset() {
	*x = Methods_DynamoDB_UpdateItemInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_DynamoDB_UpdateItemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_DynamoDB_UpdateItemInput) ProtoMessage() {}

func (x *Methods_DynamoDB_UpdateItemInput) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_DynamoDB_UpdateItemInput.ProtoReflect.Descriptor instead.
func (*Methods_DynamoDB_UpdateItemInput) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 1, 3}
}

func (x *Methods_DynamoDB_UpdateItemInput) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Methods_DynamoDB_UpdateItemInput) GetReturnValues() string {
	if x != nil {
		return x.ReturnValues
	}
	return ""
}

func (x *Methods_DynamoDB_UpdateItemInput) GetReturnItemCollectionMetrics() string {
	if x != nil {
		return x.ReturnItemCollectionMetrics
	}
	return ""
}

func (x *Methods_DynamoDB_UpdateItemInput) GetConditionExpression() string {
	if x != nil {
		return x.ConditionExpression
	}
	return ""
}

func (x *Methods_DynamoDB_UpdateItemInput) GetConditionalOperator() string {
	if x != nil {
		return x.ConditionalOperator
	}
	return ""
}

func (x *Methods_DynamoDB_UpdateItemInput) GetReturnConsumedCapacity() string {
	if x != nil {
		return x.ReturnConsumedCapacity
	}
	return ""
}

func (x *Methods_DynamoDB_UpdateItemInput) GetExpressionAttributeNames() map[string]string {
	if x != nil {
		return x.ExpressionAttributeNames
	}
	return nil
}

func (x *Methods_DynamoDB_UpdateItemInput) GetUpdateExpression() string {
	if x != nil {
		return x.UpdateExpression
	}
	return ""
}

type Methods_DynamoDB_DeleteItemInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Methods_DynamoDB_DeleteItemInput) Reset() {
	*x = Methods_DynamoDB_DeleteItemInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_DynamoDB_DeleteItemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_DynamoDB_DeleteItemInput) ProtoMessage() {}

func (x *Methods_DynamoDB_DeleteItemInput) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_DynamoDB_DeleteItemInput.ProtoReflect.Descriptor instead.
func (*Methods_DynamoDB_DeleteItemInput) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 1, 4}
}

type Methods_DynamoDB_QueryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Methods_DynamoDB_QueryInput) Reset() {
	*x = Methods_DynamoDB_QueryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_DynamoDB_QueryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_DynamoDB_QueryInput) ProtoMessage() {}

func (x *Methods_DynamoDB_QueryInput) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_DynamoDB_QueryInput.ProtoReflect.Descriptor instead.
func (*Methods_DynamoDB_QueryInput) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 1, 5}
}

type Methods_DynamoDB_ScanInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Methods_DynamoDB_ScanInput) Reset() {
	*x = Methods_DynamoDB_ScanInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_methods_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Methods_DynamoDB_ScanInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Methods_DynamoDB_ScanInput) ProtoMessage() {}

func (x *Methods_DynamoDB_ScanInput) ProtoReflect() protoreflect.Message {
	mi := &file_methods_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Methods_DynamoDB_ScanInput.ProtoReflect.Descriptor instead.
func (*Methods_DynamoDB_ScanInput) Descriptor() ([]byte, []int) {
	return file_methods_proto_rawDescGZIP(), []int{0, 1, 6}
}

var File_methods_proto protoreflect.FileDescriptor

var file_methods_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x22, 0xc1, 0x16, 0x0a, 0x07,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x48,
	0x00, 0x52, 0x06, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x12, 0x3a, 0x0a, 0x08, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x6f, 0x64, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x42, 0x48, 0x00, 0x52, 0x08, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x6f, 0x64, 0x62, 0x12, 0x2b, 0x0a, 0x03, 0x73, 0x71, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x53, 0x51, 0x53, 0x48, 0x00, 0x52, 0x03, 0x73,
	0x71, 0x73, 0x12, 0x2b, 0x0a, 0x03, 0x6d, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x2e, 0x4d, 0x53, 0x4b, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x73, 0x6b, 0x12,
	0x37, 0x0a, 0x07, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x48, 0x00, 0x52,
	0x07, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x1a, 0x4b, 0x0a, 0x06, 0x4c, 0x61, 0x6d, 0x62,
	0x64, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0xd9, 0x12, 0x0a, 0x08, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f,
	0x44, 0x42, 0x12, 0x45, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44,
	0x42, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x45, 0x0a, 0x07, 0x50, 0x75, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6d, 0x61,
	0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x42, 0x2e, 0x50, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x07, 0x50, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x4e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f,
	0x44, 0x42, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x4e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f,
	0x44, 0x42, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x3f, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x42, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x05, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x3c, 0x0a, 0x04, 0x53, 0x63, 0x61, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x42, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x04, 0x53, 0x63, 0x61, 0x6e, 0x1a,
	0xee, 0x02, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x0c, 0x0a, 0x01, 0x42, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x42, 0x12,
	0x12, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x42,
	0x4f, 0x4f, 0x4c, 0x12, 0x0e, 0x0a, 0x02, 0x42, 0x53, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x02, 0x42, 0x53, 0x12, 0x38, 0x0a, 0x01, 0x4c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x42, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x01, 0x4c, 0x12, 0x3f, 0x0a,
	0x01, 0x4d, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x42, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x01, 0x4d, 0x12, 0x0c,
	0x0a, 0x01, 0x4e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x4e, 0x12, 0x0e, 0x0a, 0x02,
	0x4e, 0x53, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x4e, 0x53, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x53, 0x12, 0x0e,
	0x0a, 0x02, 0x53, 0x53, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x53, 0x53, 0x1a, 0x60,
	0x0a, 0x06, 0x4d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6d, 0x61, 0x7a,
	0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x42, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0xbd, 0x03, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x54,
	0x6f, 0x47, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x54, 0x6f, 0x47, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x83, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x6f, 0x44, 0x42, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x18, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a,
	0x16, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x4b, 0x0a, 0x1d, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x81, 0x04, 0x0a, 0x0c, 0x50, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x64, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a,
	0x13, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x83, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f,
	0x44, 0x42, 0x2e, 0x50, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x4b, 0x0a, 0x1d, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0xb3, 0x04, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x30, 0x0a, 0x13,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x36, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x64, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x86, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x61, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x42, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x4b, 0x0a,
	0x1d, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x11, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x0a,
	0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0b, 0x0a, 0x09, 0x53,
	0x63, 0x61, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x05, 0x0a, 0x03, 0x53, 0x51, 0x53, 0x1a, 0x30, 0x0a, 0x03, 0x4d, 0x53, 0x4b, 0x12,
	0x29, 0x0a, 0x10, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x28, 0x0a, 0x07, 0x4b, 0x69,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x61, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x41, 0x72, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x42,
	0x39, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61,
	0x74, 0x61, 0x6c, 0x6c, 0x61, 0x78, 0x69, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x3b, 0x61, 0x70, 0x69, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_methods_proto_rawDescOnce sync.Once
	file_methods_proto_rawDescData = file_methods_proto_rawDesc
)

func file_methods_proto_rawDescGZIP() []byte {
	file_methods_proto_rawDescOnce.Do(func() {
		file_methods_proto_rawDescData = protoimpl.X.CompressGZIP(file_methods_proto_rawDescData)
	})
	return file_methods_proto_rawDescData
}

var file_methods_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_methods_proto_goTypes = []interface{}{
	(*Methods)(nil),                          // 0: amazon.api.Methods
	(*Methods_Lambda)(nil),                   // 1: amazon.api.Methods.Lambda
	(*Methods_DynamoDB)(nil),                 // 2: amazon.api.Methods.DynamoDB
	(*Methods_SQS)(nil),                      // 3: amazon.api.Methods.SQS
	(*Methods_MSK)(nil),                      // 4: amazon.api.Methods.MSK
	(*Methods_Kinesis)(nil),                  // 5: amazon.api.Methods.Kinesis
	(*Methods_DynamoDB_AttributValue)(nil),   // 6: amazon.api.Methods.DynamoDB.AttributValue
	(*Methods_DynamoDB_GetItemInput)(nil),    // 7: amazon.api.Methods.DynamoDB.GetItemInput
	(*Methods_DynamoDB_PutItemInput)(nil),    // 8: amazon.api.Methods.DynamoDB.PutItemInput
	(*Methods_DynamoDB_UpdateItemInput)(nil), // 9: amazon.api.Methods.DynamoDB.UpdateItemInput
	(*Methods_DynamoDB_DeleteItemInput)(nil), // 10: amazon.api.Methods.DynamoDB.DeleteItemInput
	(*Methods_DynamoDB_QueryInput)(nil),      // 11: amazon.api.Methods.DynamoDB.QueryInput
	(*Methods_DynamoDB_ScanInput)(nil),       // 12: amazon.api.Methods.DynamoDB.ScanInput
	nil,                                      // 13: amazon.api.Methods.DynamoDB.AttributValue.MEntry
	nil,                                      // 14: amazon.api.Methods.DynamoDB.GetItemInput.ExpressionAttributeNamesEntry
	nil,                                      // 15: amazon.api.Methods.DynamoDB.PutItemInput.ExpressionAttributeNamesEntry
	nil,                                      // 16: amazon.api.Methods.DynamoDB.UpdateItemInput.ExpressionAttributeNamesEntry
}
var file_methods_proto_depIdxs = []int32{
	1,  // 0: amazon.api.Methods.lambda:type_name -> amazon.api.Methods.Lambda
	2,  // 1: amazon.api.Methods.dynamodb:type_name -> amazon.api.Methods.DynamoDB
	3,  // 2: amazon.api.Methods.sqs:type_name -> amazon.api.Methods.SQS
	4,  // 3: amazon.api.Methods.msk:type_name -> amazon.api.Methods.MSK
	5,  // 4: amazon.api.Methods.kinesis:type_name -> amazon.api.Methods.Kinesis
	7,  // 5: amazon.api.Methods.DynamoDB.GetItem:type_name -> amazon.api.Methods.DynamoDB.GetItemInput
	8,  // 6: amazon.api.Methods.DynamoDB.PutItem:type_name -> amazon.api.Methods.DynamoDB.PutItemInput
	9,  // 7: amazon.api.Methods.DynamoDB.UpdateItem:type_name -> amazon.api.Methods.DynamoDB.UpdateItemInput
	10, // 8: amazon.api.Methods.DynamoDB.DeleteItem:type_name -> amazon.api.Methods.DynamoDB.DeleteItemInput
	11, // 9: amazon.api.Methods.DynamoDB.Query:type_name -> amazon.api.Methods.DynamoDB.QueryInput
	12, // 10: amazon.api.Methods.DynamoDB.Scan:type_name -> amazon.api.Methods.DynamoDB.ScanInput
	6,  // 11: amazon.api.Methods.DynamoDB.AttributValue.L:type_name -> amazon.api.Methods.DynamoDB.AttributValue
	13, // 12: amazon.api.Methods.DynamoDB.AttributValue.M:type_name -> amazon.api.Methods.DynamoDB.AttributValue.MEntry
	14, // 13: amazon.api.Methods.DynamoDB.GetItemInput.ExpressionAttributeNames:type_name -> amazon.api.Methods.DynamoDB.GetItemInput.ExpressionAttributeNamesEntry
	15, // 14: amazon.api.Methods.DynamoDB.PutItemInput.ExpressionAttributeNames:type_name -> amazon.api.Methods.DynamoDB.PutItemInput.ExpressionAttributeNamesEntry
	16, // 15: amazon.api.Methods.DynamoDB.UpdateItemInput.ExpressionAttributeNames:type_name -> amazon.api.Methods.DynamoDB.UpdateItemInput.ExpressionAttributeNamesEntry
	6,  // 16: amazon.api.Methods.DynamoDB.AttributValue.MEntry.value:type_name -> amazon.api.Methods.DynamoDB.AttributValue
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_methods_proto_init() }
func file_methods_proto_init() {
	if File_methods_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_methods_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_Lambda); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_DynamoDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_SQS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_MSK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_Kinesis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_DynamoDB_AttributValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_DynamoDB_GetItemInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_DynamoDB_PutItemInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_DynamoDB_UpdateItemInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_DynamoDB_DeleteItemInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_DynamoDB_QueryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_methods_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Methods_DynamoDB_ScanInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_methods_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Methods_Lambda_)(nil),
		(*Methods_Dynamodb)(nil),
		(*Methods_Sqs)(nil),
		(*Methods_Msk)(nil),
		(*Methods_Kinesis_)(nil),
	}
	file_methods_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Methods_DynamoDB_GetItem)(nil),
		(*Methods_DynamoDB_PutItem)(nil),
		(*Methods_DynamoDB_UpdateItem)(nil),
		(*Methods_DynamoDB_DeleteItem)(nil),
		(*Methods_DynamoDB_Query)(nil),
		(*Methods_DynamoDB_Scan)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_methods_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_methods_proto_goTypes,
		DependencyIndexes: file_methods_proto_depIdxs,
		MessageInfos:      file_methods_proto_msgTypes,
	}.Build()
	File_methods_proto = out.File
	file_methods_proto_rawDesc = nil
	file_methods_proto_goTypes = nil
	file_methods_proto_depIdxs = nil
}
