
syntax = "proto3";

package proto;

import "google/protobuf/timestamp.proto";
import "api/annotations.proto";

// Example ...
service Example {
  // Insert ...
  rpc Insert(Insert.Request) returns (Insert.Response) {
    option (amazon.api.methods).lambda = {
      function_name: "arn:aws:lambda:us-east-2:123456789012:function:my-function",
      qualifier: "$LATEST"
    };
  };

  // Update ...
  rpc Update(Update.Request) returns (Update.Response) {
    option (amazon.api.methods).dynamodb.UpdateItem = {
      ExpressionAttributeNames: [
        { key: "#AT", value: "AlbumTitle" },
        { key: "#Y", value: "Year" }
      ]
      ReturnValues:     "ALL_NEW",
      TableName:        "Music",
      UpdateExpression: "SET #Y = :y, #AT = :t"
    };
  };
}

// Song ...
message Song {
 // Artist ...
  string artist       = 1 [(amazon.api.fields).dynamodb = { Key: "Artist" }];
  // SongTitle ...
  string song_title   = 2 [(amazon.api.fields).dynamodb = { Key: "SongTitle" }];
  // AlbumTitle ...
  string album_title  = 3 [(amazon.api.fields).dynamodb = { ExpressionValue: ":t" }];
  // Year ...
  string year         = 4 [(amazon.api.fields).dynamodb = { ExpressionValue: ":y" }];
}

// Insert ...
message Insert {
  // Request ...
  message Request {
    Song Song = 1;
  }
  // Response ...
  message Response {
    string uuid = 1;
  }
}

// Update ...
message Update {
  // Request ...
  message Request {
    Song song = 1;
  }
  // Response ...
  message Response {
    string uuid = 1;
  }
}

// ListSongs ...
message ListSongs {
  // Request ...
  message Request {
  }
  // Response ...
  message Response {
    repeated Song songs = 1;
  }
}

// Empty ...
message Empty {}
