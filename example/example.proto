
syntax = "proto3";

package proto;

import "google/protobuf/timestamp.proto";
import "api/annotations.proto";

// Example ...
service Example {
  // Insert ...
  rpc Insert(Insert.Request) returns (Insert.Response) {
    option (amazon.api.services).lambda = {
      function_name: "arn:aws:lambda:us-east-2:123456789012:function:my-function",
      qualifier: "$LATEST"
    };
  };

  // Update ...
  rpc Update(Update.Request) returns (Update.Response) {
    option (amazon.api.services).dynamodb.UpdateItem = {
      TableName: "aws-grpc-service-proxy"
      ExpressionAttributeNames: map[string]*string{
        "#AT": aws.String("AlbumTitle"),
        "#Y":  aws.String("Year"),
      },
      ExpressionAttributeValues: map[string]*dynamodb.AttributeValue{
        ":t": {
            S: aws.String("Louder Than Ever"),
        },
        ":y": {
            N: aws.String("2015"),
        },
      },
      Key: map[string]*dynamodb.AttributeValue{
        "Artist": {
            S: aws.String("Acme Band"),
        },
        "SongTitle": {
            S: aws.String("Happy Day"),
        },
      },
      ReturnValues:     aws.String("ALL_NEW"),
      UpdateExpression: aws.String("SET #Y = :y, #AT = :t"),
    };
  };
}

// Item ...
message Item {
 // UUID ...
  string uuid   = 1;
  // Title ...
  string title  = 2;
  // Body ...
  string body   = 3;
}

// Insert ...
message Insert {
  // Request ...
  message Request {
    Item item = 1;
  }
  // Response ...
  message Response {
    string uuid = 1;
  }
}

// Update ...
message Update {
  // Request ...
  message Request {
    Item item = 1;
  }
  // Response ...
  message Response {
    string uuid = 1;
  }
}

// ListItems ...
message ListItems {
  // Request ...
  message Request {
  }
  // Response ...
  message Response {
    repeated Item items = 1;
  }
}

// Empty ...
message Empty {}
