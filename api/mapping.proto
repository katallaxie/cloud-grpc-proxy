syntax = "proto3";

package amazon.api;

option cc_enable_arenas = true;
option go_package = "github.com/awslabs/protoc-gen-aws-service-proxy/api;annotations";

message Lambda {
  string function_name  = 1;
}

message DynamoDB {
  message AttributValue {
    bytes B                     = 1;
    bool BOOL                   = 2;
    repeated bytes BS           = 3;
    repeated AttributValue L    = 4;
    map<string,AttributValue> M = 5;
    string N                    = 6;
    repeated string NS          = 7;
    bool NULL                   = 8;
    string S                    = 9;
    repeated string SS          = 10;
  }

  message GetItemInput {
    repeated string AttributesToGet             = 1;
    bool ConsistentRead                         = 2;
    map<string,string> ExpressionAttributeNames = 3;
    map<string,AttributValue> Key               = 4;
    string ProjectionExpression                 = 5;
    string ReturnConsumedCapacity               = 6;
    string TableName                            = 7;                    
  }

  message PutItemInput {
    string TableName    = 1;
    string ReturnValues = 2;
    string ReturnItemCollectionMetrics = 3;
    string ReturnConsumedCapacity = 4;
    string ConditionExpression    = 5;
    string ConditionalOperator    = 6;
    map<string,string> ExpressionAttributeNames = 7;
    map<string,AttributValue> ExpressionAttributeValues = 8;
  }

  message UpdateItemInput {
    string TableName    = 1;
    string ReturnValues = 2;
    string ReturnItemCollectionMetrics = 3;
    string ConditionExpression = 4;
    string ConditionalOperator = 5;
    string ReturnConsumedCapacity = 6;
    map<string,string> ExpressionAttributeNames  = 7;
    map<string,string> ExpressionAttributeValues = 8;
    string UpdateExpression = 9;
  }

  message DeleteItemInput {

  }

  message QueryInput {

  }

  message ScanInput {

  }

  oneof input {
    GetItemInput GetItem = 1;
    PutItemInput PutItem = 2;
    UpdateItemInput UpdateItem = 3;
    DeleteItemInput DeleteItem = 4;
    QueryInput Query = 5;
    ScanInput Scan = 6;
  }
}

message SQS {
  string queue_url      = 1;
}

message MSK {
  repeated string bootstrap_server  = 1;
}

message Kinesis {
  string stream_arn     = 1;
}

message Services {
  string selector = 1;

  oneof pattern {
    Lambda lambda       = 2;
    DynamoDB dynamodb   = 3;
    SQS sqs             = 4;
    MSK msk             = 5;
    Kinesis kinesis     = 6;
  }
}